package com.cm.rotator.domain.rotator.model.obj.rotator;

import com.cm.rotator.domain.rotator.model.obj.rotator.iface.IUnmatchedconversion;
import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;
import java.util.WeakHashMap;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: UnmatchedConversion.
 * @author autogenerated
 */

@Entity
@Table(name = "UnmatchedConversion", catalog = "rotator")
public class Unmatchedconversion implements Cloneable, Serializable, IPojoGenEntity, IUnmatchedconversion {

	/** Serial Version UID. */
	private static final long serialVersionUID = -559008632L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Long> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Long>());
	
	/** hashCode temporary storage. */
	private volatile Long hashCode;
	

	/** Field mapping. */
	private Long advertiserId;
	/** Field mapping. */
	private Long countryUrlCampaignId;
	/** Field mapping. */
	private Date createdAt;
	/** Field mapping. */
	private Long cAdvertiserId;
	/** Field mapping. */
	private Long cCountryUrlCampaignId;
	/** Field mapping. */
	private String cHash;
	/** Field mapping. */
	private Long cRawTrafficId;
	/** Field mapping. */
	private String httpReferer;
	/** Field mapping. */
	private Long id = 0L; // init for hibernate bug workaround
	/** Field mapping. */
	private String ip;
	/** Field mapping. */
	private String message;
	/** Field mapping. */
	private Long rawTrafficId;
	/** Field mapping. */
	private String uri;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public Unmatchedconversion() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public Unmatchedconversion(Long id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param createdAt Date object;
	 * @param id Long object;
	 */
	public Unmatchedconversion(Date createdAt, Long id) {

		this.createdAt = createdAt;
		this.id = id;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return Unmatchedconversion.class;
	}
 

    /**
     * Return the value associated with the column: advertiserId.
	 * @return A Long object (this.advertiserId)
	 */
	@Column( name = "advertiser_id"  )
	public Long getAdvertiserId() {
		return this.advertiserId;
		
	}
	

  
    /**  
     * Set the value related to the column: advertiserId.
	 * @param advertiserId the advertiserId value you wish to set
	 */
	public void setAdvertiserId(final Long advertiserId) {
		this.advertiserId = advertiserId;
	}

    /**
     * Return the value associated with the column: countryUrlCampaignId.
	 * @return A Long object (this.countryUrlCampaignId)
	 */
	@Column( name = "country_url_campaign_id"  )
	public Long getCountryUrlCampaignId() {
		return this.countryUrlCampaignId;
		
	}
	

  
    /**  
     * Set the value related to the column: countryUrlCampaignId.
	 * @param countryUrlCampaignId the countryUrlCampaignId value you wish to set
	 */
	public void setCountryUrlCampaignId(final Long countryUrlCampaignId) {
		this.countryUrlCampaignId = countryUrlCampaignId;
	}

    /**
     * Return the value associated with the column: createdAt.
	 * @return A Date object (this.createdAt)
	 */
	@Column( name = "created_at", nullable = false  )
	public Date getCreatedAt() {
		return this.createdAt;
		
	}
	

  
    /**  
     * Set the value related to the column: createdAt.
	 * @param createdAt the createdAt value you wish to set
	 */
	public void setCreatedAt(final Date createdAt) {
		this.createdAt = createdAt;
	}

    /**
     * Return the value associated with the column: cAdvertiserId.
	 * @return A Long object (this.cAdvertiserId)
	 */
	@Column( name = "c_advertiser_id"  )
	public Long getCAdvertiserId() {
		return this.cAdvertiserId;
		
	}
	

  
    /**  
     * Set the value related to the column: cAdvertiserId.
	 * @param cAdvertiserId the cAdvertiserId value you wish to set
	 */
	public void setCAdvertiserId(final Long cAdvertiserId) {
		this.cAdvertiserId = cAdvertiserId;
	}

    /**
     * Return the value associated with the column: cCountryUrlCampaignId.
	 * @return A Long object (this.cCountryUrlCampaignId)
	 */
	@Column( name = "c_country_url_campaign_id"  )
	public Long getCCountryUrlCampaignId() {
		return this.cCountryUrlCampaignId;
		
	}
	

  
    /**  
     * Set the value related to the column: cCountryUrlCampaignId.
	 * @param cCountryUrlCampaignId the cCountryUrlCampaignId value you wish to set
	 */
	public void setCCountryUrlCampaignId(final Long cCountryUrlCampaignId) {
		this.cCountryUrlCampaignId = cCountryUrlCampaignId;
	}

    /**
     * Return the value associated with the column: cHash.
	 * @return A String object (this.cHash)
	 */
	@Column( name = "c_hash", length = 255  )
	public String getCHash() {
		return this.cHash;
		
	}
	

  
    /**  
     * Set the value related to the column: cHash.
	 * @param cHash the cHash value you wish to set
	 */
	public void setCHash(final String cHash) {
		this.cHash = cHash;
	}

    /**
     * Return the value associated with the column: cRawTrafficId.
	 * @return A Long object (this.cRawTrafficId)
	 */
	@Column( name = "c_raw_traffic_id"  )
	public Long getCRawTrafficId() {
		return this.cRawTrafficId;
		
	}
	

  
    /**  
     * Set the value related to the column: cRawTrafficId.
	 * @param cRawTrafficId the cRawTrafficId value you wish to set
	 */
	public void setCRawTrafficId(final Long cRawTrafficId) {
		this.cRawTrafficId = cRawTrafficId;
	}

    /**
     * Return the value associated with the column: httpReferer.
	 * @return A String object (this.httpReferer)
	 */
	@Column( name = "http_referer", length = 65535  )
	public String getHttpReferer() {
		return this.httpReferer;
		
	}
	

  
    /**  
     * Set the value related to the column: httpReferer.
	 * @param httpReferer the httpReferer value you wish to set
	 */
	public void setHttpReferer(final String httpReferer) {
		this.httpReferer = httpReferer;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Long object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column( name = "id", nullable = false  )
	public Long getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Long id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0L) &&
				(id != null) &&
				(this.hashCode != null) ) {
			SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: ip.
	 * @return A String object (this.ip)
	 */
	@Column( length = 15  )
	public String getIp() {
		return this.ip;
		
	}
	

  
    /**  
     * Set the value related to the column: ip.
	 * @param ip the ip value you wish to set
	 */
	public void setIp(final String ip) {
		this.ip = ip;
	}

    /**
     * Return the value associated with the column: message.
	 * @return A String object (this.message)
	 */
	@Column( length = 65535  )
	public String getMessage() {
		return this.message;
		
	}
	

  
    /**  
     * Set the value related to the column: message.
	 * @param message the message value you wish to set
	 */
	public void setMessage(final String message) {
		this.message = message;
	}

    /**
     * Return the value associated with the column: rawTrafficId.
	 * @return A Long object (this.rawTrafficId)
	 */
	@Column( name = "raw_traffic_id"  )
	public Long getRawTrafficId() {
		return this.rawTrafficId;
		
	}
	

  
    /**  
     * Set the value related to the column: rawTrafficId.
	 * @param rawTrafficId the rawTrafficId value you wish to set
	 */
	public void setRawTrafficId(final Long rawTrafficId) {
		this.rawTrafficId = rawTrafficId;
	}

    /**
     * Return the value associated with the column: uri.
	 * @return A String object (this.uri)
	 */
	@Column( length = 255  )
	public String getUri() {
		return this.uri;
		
	}
	

  
    /**  
     * Set the value related to the column: uri.
	 * @param uri the uri value you wish to set
	 */
	public void setUri(final String uri) {
		this.uri = uri;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public Unmatchedconversion clone() throws CloneNotSupportedException {
		
        final Unmatchedconversion copy = (Unmatchedconversion)super.clone();

		copy.setAdvertiserId(this.getAdvertiserId());
		copy.setCountryUrlCampaignId(this.getCountryUrlCampaignId());
		copy.setCreatedAt(this.getCreatedAt());
		copy.setCAdvertiserId(this.getCAdvertiserId());
		copy.setCCountryUrlCampaignId(this.getCCountryUrlCampaignId());
		copy.setCHash(this.getCHash());
		copy.setCRawTrafficId(this.getCRawTrafficId());
		copy.setHttpReferer(this.getHttpReferer());
		copy.setId(this.getId());
		copy.setIp(this.getIp());
		copy.setMessage(this.getMessage());
		copy.setRawTrafficId(this.getRawTrafficId());
		copy.setUri(this.getUri());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("advertiserId: " + this.getAdvertiserId() + ", ");
		sb.append("countryUrlCampaignId: " + this.getCountryUrlCampaignId() + ", ");
		sb.append("createdAt: " + this.getCreatedAt() + ", ");
		sb.append("cAdvertiserId: " + this.getCAdvertiserId() + ", ");
		sb.append("cCountryUrlCampaignId: " + this.getCCountryUrlCampaignId() + ", ");
		sb.append("cHash: " + this.getCHash() + ", ");
		sb.append("cRawTrafficId: " + this.getCRawTrafficId() + ", ");
		sb.append("httpReferer: " + this.getHttpReferer() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("ip: " + this.getIp() + ", ");
		sb.append("message: " + this.getMessage() + ", ");
		sb.append("rawTrafficId: " + this.getRawTrafficId() + ", ");
		sb.append("uri: " + this.getUri());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final Unmatchedconversion that; 
		try {
			that = (Unmatchedconversion) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAdvertiserId() == null) && (that.getAdvertiserId() == null)) || (getAdvertiserId() != null && getAdvertiserId().equals(that.getAdvertiserId())));
		result = result && (((getCountryUrlCampaignId() == null) && (that.getCountryUrlCampaignId() == null)) || (getCountryUrlCampaignId() != null && getCountryUrlCampaignId().equals(that.getCountryUrlCampaignId())));
		result = result && (((getCreatedAt() == null) && (that.getCreatedAt() == null)) || (getCreatedAt() != null && getCreatedAt().equals(that.getCreatedAt())));
		result = result && (((getCAdvertiserId() == null) && (that.getCAdvertiserId() == null)) || (getCAdvertiserId() != null && getCAdvertiserId().equals(that.getCAdvertiserId())));
		result = result && (((getCCountryUrlCampaignId() == null) && (that.getCCountryUrlCampaignId() == null)) || (getCCountryUrlCampaignId() != null && getCCountryUrlCampaignId().equals(that.getCCountryUrlCampaignId())));
		result = result && (((getCHash() == null) && (that.getCHash() == null)) || (getCHash() != null && getCHash().equals(that.getCHash())));
		result = result && (((getCRawTrafficId() == null) && (that.getCRawTrafficId() == null)) || (getCRawTrafficId() != null && getCRawTrafficId().equals(that.getCRawTrafficId())));
		result = result && (((getHttpReferer() == null) && (that.getHttpReferer() == null)) || (getHttpReferer() != null && getHttpReferer().equals(that.getHttpReferer())));
		result = result && (((getIp() == null) && (that.getIp() == null)) || (getIp() != null && getIp().equals(that.getIp())));
		result = result && (((getMessage() == null) && (that.getMessage() == null)) || (getMessage() != null && getMessage().equals(that.getMessage())));
		result = result && (((getRawTrafficId() == null) && (that.getRawTrafficId() == null)) || (getRawTrafficId() != null && getRawTrafficId().equals(that.getRawTrafficId())));
		result = result && (((getUri() == null) && (that.getUri() == null)) || (getUri() != null && getUri().equals(that.getUri())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Long newHashCode = null;

					if ( getId() != null ) {
						newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0L) {
							newHashCode = getId();
						} else {
							newHashCode = (long) super.hashCode();

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
		return (int) (this.hashCode & 0xffffff);
	}
	

	
}
